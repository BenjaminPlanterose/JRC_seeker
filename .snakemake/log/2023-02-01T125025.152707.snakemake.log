Config file /home/ben/Git/JRC_seeker/sample_data/test_config.json is extended by additional config specified via the command line.
Building DAG of jobs...
Using shell: /bin/bash
Provided cores: 1 (use --cores to define parallelism)
Rules claiming more threads will be scaled down.
Job stats:
job                 count    min threads    max threads
----------------  -------  -------------  -------------
all                     1              1              1
binarize                1              1              1
binokulars              1              1              1
binpolish               1              1              1
epiread                 1              1              1
format_meth_data        1              1              1
label_states            1              1              1
learnmodel              1              1              1
meth_info               1              1              1
pileup                  1              1              1
process_epiread         1              1              1
total                  11              1              1

Select jobs to execute...

[Wed Feb  1 12:50:25 2023]
rule pileup:
    input: /home/ben/Git/JRC_seeker/sample_data/sample_data.bam, /home/ben/Git/JRC_seeker/sample_data/reference_genome/chr12.fa
    output: /media/ben/DATA/Ben/13_JRC/test_JRC_seeker/biscuit_output/my_pileup.vcf.gz
    jobid: 7
    reason: Missing output files: /media/ben/DATA/Ben/13_JRC/test_JRC_seeker/biscuit_output/my_pileup.vcf.gz; Code has changed since last execution; Params have changed since last execution
    resources: tmpdir=/tmp

RuleException in rule pileup in file /home/ben/Git/JRC_seeker/Snakefile, line 8:
NameError: The name 'print $1' is unknown in this context. Please make sure that you defined that variable. Also note that braces not used for variable access have to be escaped by repeating them, i.e. {{print $1}}, when formatting the following:

		cd {params.outdir}
		mkdir -p biscuit_output
		mkdir -p binpolish/assets
		mkdir -p chromhmm/input_files
		mkdir -p chromhmm/output_files
		mkdir -p binokulars_output
		mkdir -p tmp

		n_lines=$(wc -l < {params.chr_file})
		if [ $n_lines -eq 1 ]
		then
		        chr=$(awk '{print $1}' {params.chr_file})
		else
		        chr="none"
		fi
		if [ $chr != "none" ]
		then
			biscuit pileup -g $chr -o {params.path}/my_pileup.vcf {input.ref_genome} {input.bam}	
		else
			biscuit pileup -o {params.path}/my_pileup.vcf {input.ref_genome} {input.bam}
		fi	
		bgzip {params.path}/my_pileup.vcf
		tabix -p vcf {output}
		
